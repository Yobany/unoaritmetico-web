{
    "swagger": "2.0",
    "info": {
        "title": "UNOARITMETICO",
        "description": "API unoaritmetico, to use endpoints that need authentication use the 'Set Globally' function first",
        "contact": {
            "email": "walook.com.mx"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "unoaritmeticoweb.herokuapp.com",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Login in the api",
                "description": "Login",
                "operationId": "loginAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Account to register",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token was given",
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Register a account",
                "description": "Register a account",
                "operationId": "registerAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Account to register",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account was registered"
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/activate": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Activate account",
                "description": "Activates a account",
                "operationId": "activateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Token given by the mail",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deliverys",
                        "schema": {
                            "$ref": "#/definitions/ActivateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Request format isn't valid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/password/recover": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Sends the recover password link",
                "description": "Sends the recover password link",
                "operationId": "recoverAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Account to register",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecoverPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Password recover link was sent"
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/auth/password/reset": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates the user password",
                "description": "Updates the user password",
                "operationId": "recoverAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Token given by the mail",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Account to register",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Password recover link was sent"
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/games": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Create a game",
                "description": "Create a game",
                "operationId": "storeGame",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Account to register",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoreGameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Game was saved"
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/games/{gameId}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Display a single game",
                "description": "Display a single game",
                "operationId": "getGame",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gameId",
                        "in": "path",
                        "description": "Id of game to retrieve",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game retrieved",
                        "schema": {
                            "$ref": "#/definitions/DetailGameResponse"
                        }
                    },
                    "400": {
                        "description": "Request format isn't valid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Token is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Obtains groups",
                "description": "Obtains groups",
                "operationId": "getGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page requested, default is 1",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page, default is 10",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Groups created by user",
                        "schema": {
                            "$ref": "#/definitions/GetGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Request format isn't valid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Token is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Create a group",
                "description": "Create a group",
                "operationId": "storeGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Account to register",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoreGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account was registered",
                        "schema": {
                            "$ref": "#/definitions/StoreGroupResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/groups/{groupId}": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Display a single group",
                "description": "Display a single group",
                "operationId": "getGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Id of group to retrieve",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Groups created by user",
                        "schema": {
                            "$ref": "#/definitions/DetailGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Request format isn't valid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Token is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Update a group",
                "description": "Update a group",
                "operationId": "updateGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Group to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateGroupRequest"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Id of group to retrieve",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group was updated",
                        "schema": {
                            "$ref": "#/definitions/UpdateGroupResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Delete a group",
                "description": "Delete a group",
                "operationId": "deleteGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Id of group to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Group was deleted"
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Obtains all students",
                "description": "Obtains all students",
                "operationId": "getStudents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page requested, default is 1",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page, default is 10",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Students created by user in the group",
                        "schema": {
                            "$ref": "#/definitions/GetStudentsResponse"
                        }
                    },
                    "400": {
                        "description": "Request format isn't valid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Token is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Students"
                ],
                "summary": "Create a student",
                "description": "Create a student",
                "operationId": "storeStudent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Student information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoreStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account was registered",
                        "schema": {
                            "$ref": "#/definitions/StoreStudentResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/students/{studentId}": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Display a single student",
                "description": "Display a single student",
                "operationId": "getGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Id of student to retrieve",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Groups created by user",
                        "schema": {
                            "$ref": "#/definitions/DetailStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Request format isn't valid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Token is invalid",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Students"
                ],
                "summary": "Update a student",
                "description": "Update a student",
                "operationId": "updateStudent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Group to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateStudentRequest"
                        }
                    },
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Id of student to update",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group was updated",
                        "schema": {
                            "$ref": "#/definitions/UpdateStudentResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Students"
                ],
                "summary": "Delete a student",
                "description": "Delete a student",
                "operationId": "deleteStudent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Id of student to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Group was deleted"
                    },
                    "405": {
                        "description": "Invalid Method",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Invalid Fields",
                        "schema": {
                            "$ref": "#/definitions/Validation"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "RecoverPasswordRequest": {
            "properties": {
                "email": {
                    "description": "",
                    "type": "string",
                    "format": "email",
                    "example": "unoaritmeticoapi@gmail.com"
                }
            }
        },
        "RegisterUserRequest": {
            "properties": {
                "first_name": {
                    "description": "",
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "description": "",
                    "type": "string",
                    "example": "Papa"
                },
                "email": {
                    "description": "",
                    "type": "string",
                    "format": "email",
                    "example": "unoaritmeticoapi@gmail.com"
                },
                "password": {
                    "description": "",
                    "type": "string",
                    "format": "password",
                    "example": "kittens"
                },
                "password_confirmation": {
                    "description": "",
                    "type": "string",
                    "format": "password",
                    "example": "kittens"
                }
            }
        },
        "ResetPasswordRequest": {
            "properties": {
                "password": {
                    "description": "",
                    "type": "string",
                    "format": "password",
                    "example": "kittens"
                },
                "password_confirmation": {
                    "description": "",
                    "type": "string",
                    "format": "password",
                    "example": "kittens"
                }
            }
        },
        "LoginRequest": {
            "properties": {
                "email": {
                    "description": "",
                    "type": "string",
                    "example": "unoaritmeticoapi@gmail.com"
                },
                "password": {
                    "description": "",
                    "type": "string",
                    "example": "kittens"
                }
            }
        },
        "StoreGameRequest": {
            "properties": {
                "played_at": {
                    "description": "",
                    "type": "string",
                    "example": "2017-02-18 21:30:19"
                },
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Ven y juega conmigo"
                },
                "winner": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "moves": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MoveRequestItem"
                    }
                }
            }
        },
        "StoreGroupRequest": {
            "properties": {
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Primary 1st Matutine"
                }
            }
        },
        "UpdateGroupRequest": {
            "properties": {
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Primary 1st Matutine"
                }
            }
        },
        "StoreStudentRequest": {
            "properties": {
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Mariana"
                },
                "age": {
                    "description": "",
                    "type": "integer",
                    "example": 16
                },
                "group_id": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "UpdateStudentRequest": {
            "properties": {
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Mariana"
                },
                "age": {
                    "description": "",
                    "type": "integer",
                    "example": 16
                },
                "group_id": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ActivateUserResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/DefaultMeta"
                },
                "data": {
                    "description": "",
                    "type": "array",
                    "$ref": "#/definitions/UserItem"
                }
            }
        },
        "LoginResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/TokenMeta"
                },
                "data": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/UserItem"
                }
            }
        },
        "ColorItem": {
            "properties": {
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Azul"
                }
            }
        },
        "GameDetailItem": {
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "",
                    "type": "integer",
                    "example": "Ven y juega con jaimito"
                },
                "duration": {
                    "description": "",
                    "type": "integer",
                    "example": 1201
                },
                "played_at": {
                    "description": "",
                    "type": "integer",
                    "example": "2017-02-18 21:30:19"
                },
                "winner": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/StudentItem"
                },
                "movements": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MoveItem"
                    }
                },
                "students": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StudentItem"
                    }
                }
            }
        },
        "GameItem": {
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "",
                    "type": "integer",
                    "example": "Ven y juega con jaimito"
                },
                "duration": {
                    "description": "",
                    "type": "integer",
                    "example": 1201
                },
                "played_at": {
                    "description": "",
                    "type": "integer",
                    "example": "2017-02-18 21:30:19"
                },
                "movementsNumber": {
                    "description": "",
                    "type": "integer",
                    "example": 23
                },
                "studentsNumber": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "GroupItem": {
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Primary 1st Matutine"
                },
                "studentsNumber": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "MoveItem": {
            "properties": {
                "turn": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "duration": {
                    "description": "",
                    "type": "integer",
                    "example": 122
                },
                "student": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/StudentMovementItem"
                },
                "by_color": {
                    "description": "",
                    "type": "boolean",
                    "example": false
                },
                "card_on_deck": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/OperationCardItem"
                },
                "card_played": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/PowerCardItem"
                }
            }
        },
        "MoveRequestItem": {
            "properties": {
                "turn": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "duration": {
                    "description": "",
                    "type": "integer",
                    "example": 122
                },
                "student": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "by_color": {
                    "description": "",
                    "type": "boolean",
                    "example": false
                },
                "card_on_deck": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/OperationCardRequestItem"
                },
                "card_played": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/PowerCardRequestItem"
                }
            }
        },
        "OperationCardItem": {
            "properties": {
                "operation": {
                    "description": "",
                    "type": "string",
                    "example": "2+2"
                },
                "operator": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/OperatorItem"
                },
                "result": {
                    "description": "",
                    "type": "number",
                    "format": "double",
                    "example": 4
                },
                "power": {
                    "description": "",
                    "type": "integer",
                    "$ref": "#/definitions/PowerItem"
                },
                "color": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/ColorItem"
                }
            }
        },
        "OperationCardRequestItem": {
            "properties": {
                "operation": {
                    "description": "",
                    "type": "string",
                    "example": "2+2"
                },
                "result": {
                    "description": "",
                    "type": "number",
                    "format": "double",
                    "example": 4
                },
                "color": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "OperatorItem": {
            "properties": {
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "addition"
                },
                "symbol": {
                    "description": "",
                    "type": "string",
                    "example": "+"
                }
            }
        },
        "PowerCardItem": {
            "properties": {
                "operation": {
                    "description": "",
                    "type": "string",
                    "example": "2+2"
                },
                "operator": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/OperatorItem"
                },
                "result": {
                    "description": "",
                    "type": "number",
                    "format": "double",
                    "example": 4
                },
                "power": {
                    "description": "",
                    "type": "integer",
                    "$ref": "#/definitions/PowerItem"
                },
                "color": {
                    "description": "",
                    "type": "integer",
                    "$ref": "#/definitions/ColorItem"
                }
            }
        },
        "PowerCardRequestItem": {
            "properties": {
                "power": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "color": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "PowerItem": {
            "properties": {
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "M\u00e1s 2"
                },
                "description": {
                    "description": "",
                    "type": "integer",
                    "example": "Agrega dos cartas a tu oponente"
                }
            }
        },
        "StudentItem": {
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Mariana"
                },
                "age": {
                    "description": "",
                    "type": "integer",
                    "example": 16
                },
                "group": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/GroupItem"
                },
                "winned": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GameItem"
                    }
                },
                "played": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GameItem"
                    }
                }
            }
        },
        "StudentMovementItem": {
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "",
                    "type": "string",
                    "example": "Rick Grimes"
                }
            }
        },
        "UserItem": {
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "first_name": {
                    "description": "",
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "description": "",
                    "type": "string",
                    "example": "Papa"
                },
                "email": {
                    "description": "",
                    "type": "string",
                    "format": "email",
                    "example": "unoaritmeticoapi@gmail.com"
                },
                "role": {
                    "description": "",
                    "type": "string",
                    "example": "TEACHER"
                }
            }
        },
        "Error": {
            "properties": {
                "message": {
                    "description": "",
                    "type": "string",
                    "example": "Bad Request"
                },
                "status_code": {
                    "description": "",
                    "type": "integer",
                    "format": "int64",
                    "example": 400
                }
            }
        },
        "Validation": {
            "properties": {
                "error": {
                    "description": "",
                    "type": "array",
                    "$ref": "#/definitions/ValidationItem"
                }
            }
        },
        "ValidationItem": {
            "properties": {
                "field": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DetailGameResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/DefaultMeta"
                },
                "data": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/GameDetailItem"
                }
            }
        },
        "DetailGroupResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/DefaultMeta"
                },
                "data": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/GroupItem"
                }
            }
        },
        "GetGroupsResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/PaginationMeta"
                },
                "data": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupItem"
                    }
                }
            }
        },
        "StoreGroupResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/DefaultMeta"
                },
                "data": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/GroupItem"
                }
            }
        },
        "UpdateGroupResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/DefaultMeta"
                },
                "data": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/GroupItem"
                }
            }
        },
        "DefaultMeta": {},
        "PaginationMeta": {
            "properties": {
                "total": {
                    "description": "",
                    "type": "integer",
                    "example": 100
                },
                "per_page": {
                    "description": "",
                    "type": "integer",
                    "example": 10
                },
                "current_page": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "TokenMeta": {
            "properties": {
                "token": {
                    "description": "",
                    "type": "string",
                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjI3MzgzZTUwZDBiMGZmMWZlNGFkMDg3YzRmNDY4ZTIw"
                }
            }
        },
        "DetailStudentResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/DefaultMeta"
                },
                "data": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/StudentItem"
                }
            }
        },
        "GetStudentsResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/PaginationMeta"
                },
                "data": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StudentItem"
                    }
                }
            }
        },
        "StoreStudentResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/DefaultMeta"
                },
                "data": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/StudentItem"
                }
            }
        },
        "UpdateStudentResponse": {
            "properties": {
                "meta": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/DefaultMeta"
                },
                "data": {
                    "description": "",
                    "type": "object",
                    "$ref": "#/definitions/StudentItem"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiAuth": {
            "type": "oauth2",
            "name": "Authorization",
            "flow": "password",
            "tokenUrl": "unoaritmetico.com/api",
            "scopes": {
                "read:users": "Consult userss",
                "write:users": "Modify users"
            }
        }
    }
}